{"version":3,"sources":["components/User/User.tsx","components/Todo/Todo.tsx","components/TodoList/TodoList.tsx","api.ts","App.tsx","index.tsx"],"names":["User","props","user","className","name","Todo","todo","title","completed","toString","TodoList","todos","useState","sortedTodos","setSortedTodos","type","onClick","prev","sort","first","second","localeCompare","Number","map","key","id","getPreparedTodos","a","fetch","then","response","json","fetchedTodos","fetchedUsers","data","users","find","userId","App","setTodos","isLoaded","setIsLoaded","handleStart","length","disabled","ReactDOM","render","document","getElementById"],"mappings":"8VAOaA,G,kBAA4B,SAACC,GAAW,IAC3CC,EAASD,EAATC,KAER,OACE,0BAAMC,UAAU,QACbD,EAAKE,QCJCC,EAA4B,SAACJ,GAAW,IAC3CK,EAASL,EAATK,KAER,OACE,oCACE,0BAAMH,UAAU,SACbG,EAAKC,OAGR,kBAAC,EAAD,CAAML,KAAMI,EAAKJ,OAEjB,0BAAMC,UAAS,oCAA+BG,EAAKE,YAChDF,EAAKE,UAAUC,cCZXC,EAAoC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACxBC,mBAAQ,YAAaD,IADG,mBACvDE,EADuD,KAC1CC,EAD0C,KAqB9D,OACE,oCACE,4BAAQC,KAAK,SAASC,QApBN,WAClBF,GAAe,SAAAG,GAAI,OACjB,YAAIA,GAAMC,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMZ,MAAMc,cAAcD,EAAOb,eAkBnE,sBACA,4BAAQQ,KAAK,SAASC,QAfF,WACtBF,GAAe,SAAAG,GAAI,OACjB,YAAIA,GAAMC,MAAK,SAACC,EAAOC,GAAR,OAAmBE,OAAOF,EAAOZ,WAAac,OAAOH,EAAMX,mBAa1E,qBACA,4BAAQO,KAAK,SAASC,QAVH,WACrBF,GAAe,SAAAG,GAAI,OACjB,YAAIA,GAAMC,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMjB,KAAKE,KAAKiB,cAAcD,EAAOlB,KAAKE,cAQ5E,gBACA,4BAEIS,EAAYU,KAAI,SAAAjB,GAAI,OAClB,wBAAIH,UAAU,OAAOqB,IAAKlB,EAAKmB,IAC7B,kBAAC,EAAD,CAAMnB,KAAMA,W,OCnCboB,EAAgB,uCAAG,kCAAAC,EAAA,sEACHC,MAJX,2CAI4BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UADxC,cACxBC,EADwB,gBAEHJ,MAJX,2CAI4BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFxC,cAExBE,EAFwB,OAGxBtB,EAAQqB,EAAaE,KACrBC,EAAQF,EAAaC,KAJG,kBAMtBvB,EAAMY,KAAI,SAACjB,GAAD,mBAAC,eACdA,GADa,IAEhBJ,KAAMiC,EAAMC,MAAK,SAAClC,GAAD,OAAgBA,EAAKuB,KAAOnB,EAAK+B,gBARtB,2CAAH,qDCsCdC,EAnCC,WAAO,IAAD,EACM1B,mBAAiB,IADvB,mBACbD,EADa,KACN4B,EADM,OAEY3B,oBAAS,GAFrB,mBAEb4B,EAFa,KAEHC,EAFG,KAIdC,EAAW,uCAAG,4BAAAf,EAAA,6DAClBc,GAAY,GADM,SAGCf,IAHD,OAGZQ,EAHY,OAKlBK,EAASL,GALS,2CAAH,qDAQjB,OACE,yBAAK/B,UAAU,OACb,qDACA,2BACE,yCACCQ,EAAMgC,QAGU,IAAjBhC,EAAMgC,OAEJ,4BACE5B,KAAK,SACL6B,SAAUJ,EACVxB,QAAS0B,GAEPF,EAAqB,aAAV,SAGf,kBAAC,EAAD,CAAU7B,MAAOA,MChC3BkC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.4cf6032a.chunk.js","sourcesContent":["import React from 'react';\nimport './User.css';\n\ntype UserProps = {\n  user: User;\n};\n\nexport const User: React.FC<UserProps> = (props) => {\n  const { user } = props;\n\n  return (\n    <span className=\"user\">\n      {user.name}\n    </span>\n  );\n};\n","import React from 'react';\nimport './Todo.css';\nimport { User } from '../User/User';\n\ntype TodoProps = {\n  todo: Todo;\n};\n\nexport const Todo: React.FC<TodoProps> = (props) => {\n  const { todo } = props;\n\n  return (\n    <>\n      <span className=\"title\">\n        {todo.title}\n      </span>\n\n      <User user={todo.user} />\n\n      <span className={`todo__status todo__status-${todo.completed}`}>\n        {todo.completed.toString()}\n      </span>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './TodoList.css';\nimport { Todo } from '../Todo/Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  const [sortedTodos, setSortedTodos] = useState<Todo[]>([...todos]);\n\n  const sortByTitle = () => {\n    setSortedTodos(prev => (\n      [...prev].sort((first, second) => first.title.localeCompare(second.title))\n    ));\n  };\n\n  const sortByCompleted = () => {\n    setSortedTodos(prev => (\n      [...prev].sort((first, second) => Number(second.completed) - Number(first.completed))\n    ));\n  };\n\n  const sortByUserName = () => {\n    setSortedTodos(prev => (\n      [...prev].sort((first, second) => first.user.name.localeCompare(second.user.name))\n    ));\n  };\n\n  return (\n    <>\n      <button type=\"button\" onClick={sortByTitle}>Sort by Todo title</button>\n      <button type=\"button\" onClick={sortByCompleted}>Sort by Completed</button>\n      <button type=\"button\" onClick={sortByUserName}>Sort by User</button>\n      <ul>\n        {\n          sortedTodos.map(todo => (\n            <li className=\"todo\" key={todo.id}>\n              <Todo todo={todo} />\n            </li>\n          ))\n        }\n      </ul>\n    </>\n  );\n};\n","const TODOS_URL = 'https://mate.academy/students-api/todos';\nconst USERS_URL = 'https://mate.academy/students-api/users';\n\nexport const getPreparedTodos = async (): Promise<Todo[]> => {\n  const fetchedTodos = await fetch(TODOS_URL).then(response => response.json());\n  const fetchedUsers = await fetch(USERS_URL).then(response => response.json());\n  const todos = fetchedTodos.data;\n  const users = fetchedUsers.data;\n\n  return (todos.map((todo: Todo) => ({\n    ...todo,\n    user: users.find((user: User) => user.id === todo.userId),\n  })));\n};\n","import React, { FC, useState } from 'react';\nimport './App.css';\n\nimport { TodoList } from './components/TodoList/TodoList';\nimport { getPreparedTodos } from './api';\n\nconst App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const handleStart = async () => {\n    setIsLoaded(true);\n\n    const data = await getPreparedTodos();\n\n    setTodos(data);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of todos</h1>\n      <p>\n        <span>Todos: </span>\n        {todos.length}\n      </p>\n\n      { todos.length === 0\n        ? (\n          <button\n            type=\"button\"\n            disabled={isLoaded}\n            onClick={handleStart}\n          >\n            {!isLoaded ? 'Start' : 'Loading...'}\n          </button>\n        )\n        : <TodoList todos={todos} />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}